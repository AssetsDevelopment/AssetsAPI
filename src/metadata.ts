/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/common/enum/gender_options.enum"]: await import("./modules/common/enum/gender_options.enum"),
        ["./modules/common/enum/fiscal_status.enum"]: await import("./modules/common/enum/fiscal_status.enum"),
        ["./modules/common/enum/profile_options.enum"]: await import("./modules/common/enum/profile_options.enum"),
        ["./modules/common/enum/urgency_options.enum"]: await import("./modules/common/enum/urgency_options.enum")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/professional/dto/create-professional.dto"), { "CreateProfessionalDto": { name: { required: true, type: () => String, description: "Nombre del profesional", example: "Juan", minLength: 2, maxLength: 100, pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, last_name: { required: true, type: () => String, description: "Apellido del profesional", example: "P\u00E9rez", minLength: 2, maxLength: 100, pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, gender: { required: true, description: "Genero", example: "M", enum: t["./modules/common/enum/gender_options.enum"].gender_options }, cuit: { required: false, type: () => String, description: "CUIT", example: "20345678901", pattern: "^[0-9]{11}" }, fiscal_status: { required: false, description: "Estado fiscal", example: "monotributista", enum: t["./modules/common/enum/fiscal_status.enum"].fiscal_status }, phone: { required: false, type: () => String, description: "Tel\u00E9fono", example: "1123456789", maxLength: 30 }, email: { required: false, type: () => String, description: "Email", example: "juan@gmail.com", minLength: 12, maxLength: 255 }, password: { required: true, type: () => String, description: "Contrase\u00F1a", example: "JuanPerez123@", maxLength: 255 }, birthdate: { required: false, type: () => Date, description: "Fecha de nacimiento", example: "1990-01-21" }, bank: { required: false, type: () => String, description: "Banco", example: "Santander R\u00EDo", maxLength: 255 }, bank_account: { required: false, type: () => String, description: "N\u00FAmero de cuenta", example: "123456789", maxLength: 50 }, cbu: { required: false, type: () => String, description: "CBU", example: "1234567891234567891234", maxLength: 23 }, alias: { required: false, type: () => String, description: "Alias", example: "juanperez", maxLength: 50 }, note: { required: false, type: () => String, description: "Nota", example: "Profesional con 10 a\u00F1os de experiencia" } } }], [import("./modules/professional/dto/update-professional.dto"), { "UpdateProfessionalDto": {} }], [import("./modules/common/dto/pagination.dto"), { "PaginationDto": { limit: { required: false, type: () => Number, description: "Cantidad de registros a mostrar", example: 10, minimum: 1 }, offset: { required: false, type: () => Number, description: "Cantidad de registros a saltar", example: 0, default: 0, minimum: 0 } } }], [import("./modules/client/dto/create-client.dto"), { "CreateClientDto": { name: { required: true, type: () => String, description: "Nombre del cliente", example: "Ricardo", minLength: 2, maxLength: 100, pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, is_active: { required: false, type: () => Boolean, description: "Estado del cliente", example: true } } }], [import("./modules/client/dto/update-client.dto"), { "UpdateClientDto": {} }], [import("./modules/auth/dto/login-user.dto"), { "LoginUserDto": { email: { required: false, type: () => String, description: "Email", example: "user1@gmail.com", minLength: 12, maxLength: 255 }, password: { required: true, type: () => String, description: "Contrase\u00F1a", example: "pppppppp", maxLength: 255 } } }], [import("./modules/auth/dto/token-user.dto"), { "TokenUserDto": { token: { required: true, type: () => String, description: "Token", example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxNzYsImlhdCI6MTcwNzY5NDYzOSwiZXhwIjoxNzA3NzgxMDM5fQ.ZGodi1dWraNjuE2cAk8tON-tZMJb0xLvc2rgYn7zVO8" } } }], [import("./modules/user/dto/create-user.dto"), { "CreateUserDto": { client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, name: { required: true, type: () => String, description: "Nombre del usuario", example: "Juan", minLength: 2, maxLength: 100, pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, email: { required: true, type: () => String, description: "Email", example: "juan@gmail.com", minLength: 12, maxLength: 255 }, password: { required: true, type: () => String, description: "Contrase\u00F1a", example: "JuanPerez123@", maxLength: 255 }, is_admin: { required: false, type: () => Boolean, description: "Es admin", example: true }, is_active: { required: false, type: () => Boolean, description: "Estado del usuario", example: true } } }], [import("./modules/user/dto/update-user.dto"), { "UpdateUserDto": {} }], [import("./modules/screen/dto/create-screen.dto"), { "CreateScreenDto": { name: { required: true, type: () => String, description: "Nombre del usuario", example: "Juan", minLength: 2, maxLength: 100, pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, is_active: { required: false, type: () => Boolean, description: "Estado del usuario", example: true } } }], [import("./modules/screen/dto/update-screen.dto"), { "UpdateScreenDto": {} }], [import("./modules/permission/dto/create-permission.dto"), { "CreatePermissionDto": { user_fk: { required: true, type: () => Number, description: "Foreign Key del usuario", example: 1, maximum: 2147483647, minimum: 1 }, client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, screen_fk: { required: true, type: () => Number, description: "Foreign Key de la pantalla", example: 1, maximum: 2147483647, minimum: 1 } } }], [import("./modules/permission/dto/update-permission.dto"), { "UpdatePermissionDto": {} }], [import("./modules/work_invitation/dto/create-work_invitation.dto"), { "CreateWorkInvitationDto": { client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, professional_fk: { required: true, type: () => Number, description: "Foreign Key del profesional", example: 1, maximum: 2147483647, minimum: 1 }, sender: { required: true, description: "Rol del usuario", example: "coordinador", enum: t["./modules/common/enum/profile_options.enum"].profile_options }, is_accept: { required: false, type: () => Boolean, description: "Estado de la invitaci\u00F3n", example: true, default: false } } }], [import("./modules/work_invitation/dto/update-work_invitation.dto"), { "UpdateWorkInvitationDto": {} }], [import("./modules/client_has_professional/dto/create-client_has_professional.dto"), { "CreateClientHasProfessionalDto": { client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, professional_fk: { required: true, type: () => Number, description: "Foreign Key del profesional", example: 1, maximum: 2147483647, minimum: 1 }, is_active: { required: false, type: () => Boolean, description: "Estado de la relaci\u00F3n", example: true } } }], [import("./modules/client_has_professional/dto/update-client_has_professional.dto"), { "UpdateClientHasProfessionalDto": {} }], [import("./modules/company/dto/create-company.dto"), { "CreateCompanyDto": { client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, user_fk: { required: true, type: () => Number, description: "Foreign Key del usuario", example: 1, maximum: 2147483647, minimum: 1 }, name: { required: true, type: () => String, description: "Nombre de la empresa", example: "Juan", minLength: 2, maxLength: 100, pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, cuit: { required: false, type: () => String, description: "CUIT", example: "20345678901", pattern: "^[0-9]{11}" }, note: { required: false, type: () => String, description: "Nota", example: "Nota de la empresa" }, is_active: { required: false, type: () => Boolean, description: "Estado de la empresa", example: true } } }], [import("./modules/company/dto/update-company.dto"), { "UpdateCompanyDto": {} }], [import("./modules/patient/dto/create-patient.dto"), { "CreatePatientDto": { client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, user_fk: { required: true, type: () => Number, description: "Foreign Key del usuario", example: 1, maximum: 2147483647, minimum: 1 }, company_fk: { required: true, type: () => Number, description: "Foreign Key de la empresa", example: 1, maximum: 2147483647, minimum: 1 }, name: { required: true, type: () => String, description: "Nombre del paciente", example: "Juan", minLength: 2, maxLength: 100, pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, healthcare_provider: { required: false, type: () => String, description: "Obra social", example: "Juan", minLength: 2, maxLength: 100, pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, gender: { required: true, type: () => Object, description: "Genero", example: "M" }, age: { required: false, type: () => Number, description: "Edad", example: 25, maximum: 85, minimum: 1 }, phone: { required: false, type: () => String, description: "Tel\u00E9fono", example: "1123456789", maxLength: 30 }, note: { required: false, type: () => String, description: "Nota", example: "Nota del paciente" }, is_active: { required: false, type: () => Boolean, description: "Estado del paciente", example: true } } }], [import("./modules/patient/dto/update-patient.dto"), { "UpdatePatientDto": {} }], [import("./modules/treatment/dto/create-treatment.dto"), { "CreateTreatmentDto": { client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, user_fk: { required: true, type: () => Number, description: "Foreign Key del usuario", example: 1, maximum: 2147483647, minimum: 1 }, name: { required: true, type: () => String, description: "Nombre de la prestaci\u00F3n", example: "Juan", minLength: 10, maxLength: 100, pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, abbreviation: { required: true, type: () => String, description: "Abreviacion de la prestaci\u00F3n", example: "Juan", pattern: "^[A-Za-z\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DC\u00FC\u00D1\u00F1]+" }, description: { required: false, type: () => String, description: "Descripci\u00F3n de la prestaci\u00F3n", example: "Juan" }, is_active: { required: false, type: () => Boolean, description: "Estado del prestacion", example: true } } }], [import("./modules/treatment/dto/update-treatment.dto"), { "UpdateTreatmentDto": {} }], [import("./modules/company_has_treatment/dto/create-company_has_treatment.dto"), { "CreateCompanyHasTreatmentDto": { client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, user_fk: { required: true, type: () => Number, description: "Foreign Key del usuario", example: 1, maximum: 2147483647, minimum: 1 }, company_fk: { required: true, type: () => Number, description: "Foreign Key de la empresa", example: 1, maximum: 2147483647, minimum: 1 }, treatment_fk: { required: true, type: () => Number, description: "Foreign Key de la prestaci\u00F3n", example: 1, maximum: 2147483647, minimum: 1 }, value: { required: true, type: () => Number, description: "Valor de la prestaci\u00F3n", example: 100, maximum: 99999.99, minimum: 1 } } }], [import("./modules/company_has_treatment/dto/update-company_has_treatment.dto"), { "UpdateCompanyHasTreatmentDto": {} }], [import("./modules/treatment_has_professional/dto/create-treatment_has_professional.dto"), { "CreateTreatmentHasProfessionalDto": { client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, user_fk: { required: true, type: () => Number, description: "Foreign Key del usuario", example: 1, maximum: 2147483647, minimum: 1 }, company_fk: { required: true, type: () => Number, description: "Foreign Key de la empresa", example: 1, maximum: 2147483647, minimum: 1 }, treatment_fk: { required: true, type: () => Number, description: "Foreign Key de la prestacion", example: 1, maximum: 2147483647, minimum: 1 }, professional_fk: { required: true, type: () => Number, description: "Foreign Key del profesional", example: 1, maximum: 2147483647, minimum: 1 }, value: { required: true, type: () => Number, description: "Costo de la prestaci\u00F3n", example: 100, maximum: 99999.99, minimum: 1 } } }], [import("./modules/treatment_has_professional/dto/update-treatment_has_professional.dto"), { "UpdateTreatmentHasProfessionalDto": {} }], [import("./modules/order/dto/create-order.dto"), { "CreateOrderDto": { order_fk: { required: false, type: () => Number, description: "Foreign Key del pedido", example: 1, maximum: 2147483647, minimum: 1 }, client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, user_fk: { required: true, type: () => Number, description: "Foreign Key del usuario", example: 1, maximum: 2147483647, minimum: 1 }, patient_fk: { required: true, type: () => Number, description: "Foreign Key del paciente", example: 1, maximum: 2147483647, minimum: 1 }, treatment_fk: { required: true, type: () => Number, description: "Foreign Key de la prestacion", example: 1, maximum: 2147483647, minimum: 1 }, professional_fk: { required: false, type: () => Number, description: "Foreign Key del profesional", example: 1, maximum: 2147483647, minimum: 1 }, start_date: { required: true, type: () => Date, description: "Fecha de inicio", example: "2021-01-01" }, finish_date: { required: true, type: () => Date, description: "Fecha de finalizacion", example: "2021-01-01" }, has_medical_order: { required: true, type: () => Boolean, description: "Indica si tiene orden medica", example: true }, frequency: { required: true, type: () => Number, description: "Indica la frecuencia del pedido", example: true, minimum: 1, maximum: 7 }, total_sessions: { required: true, type: () => Number, description: "Indica el total de sesiones", example: 10, minimum: 1 }, sessions: { required: true, type: () => Number, description: "Indica la sesiones realizadas", example: 10, minimum: 1 }, coinsurance: { required: true, type: () => Number, description: "Indica el valor del coseguro", example: 1000, maximum: 99999.99, minimum: 1 }, value: { required: true, type: () => Number, description: "Indica el valor especial del pedido", example: 1000, maximum: 99999.99, minimum: 1 }, cost: { required: true, type: () => Number, description: "Indica el costo especial del pedido", maximum: 99999.99, minimum: 1 }, diagnosis: { required: false, type: () => String, description: "Indica el diagnostico del paciente" }, requirements: { required: false, type: () => String, description: "Indica los requerimientos especiales del pedido" }, is_active: { required: false, type: () => Boolean, description: "Estado del pedido", example: true } } }], [import("./modules/order/dto/update-order.dto"), { "UpdateOrderDto": {} }], [import("./modules/claim/dto/create-claim.dto"), { "CreateClaimDto": { order_fk: { required: true, type: () => Number, description: "Foreign Key del pedido", example: 1, maximum: 2147483647, minimum: 1 }, client_fk: { required: true, type: () => Number, description: "Foreign Key del cliente", example: 1, maximum: 2147483647, minimum: 1 }, user_fk: { required: true, type: () => Number, description: "Foreign Key del usuario", example: 1, maximum: 2147483647, minimum: 1 }, cause: { required: true, type: () => String }, urgency: { required: true, description: "Nivel de urgencia", example: "M", enum: t["./modules/common/enum/urgency_options.enum"].urgency_options }, reported_date: { required: true, type: () => Date, description: "Fecha de reporte", example: "1990-01-21" }, is_active: { required: false, type: () => Boolean, description: "Estado del reclamo", example: true } } }], [import("./modules/claim/dto/update-claim.dto"), { "UpdateClaimDto": {} }]], "controllers": [[import("./modules/professional/professional.controller"), { "ProfessionalController": { "create": { summary: "Crea un profesional" }, "findAll": { summary: "Listar todos los profesionales" }, "findOne": { summary: "Obtiene un profesional por id" }, "update": { summary: "Actualiza un profesional por id" } } }], [import("./modules/client/client.controller"), { "ClientController": { "create": { summary: "Crear un cliente" }, "findAll": { summary: "Listar todos los clientes" }, "findOne": { summary: "Buscar un cliente por id" }, "update": { summary: "Actualizar un cliente por id" } } }], [import("./modules/auth/auth.controller"), { "AuthController": { "login": { summary: "Iniciar sesi\u00F3n DASHBOARD", type: Object }, "loginMobile": { summary: "Iniciar sesi\u00F3n MOBILE", type: Object }, "decodeToken": { summary: "Decodificar token", type: Object }, "checkAuthStatus": { summary: "Verificar estado de autenticaci\u00F3n" } } }], [import("./modules/user/user.controller"), { "UserController": { "create": { summary: "Crea un usuario" }, "findAll": { summary: "Listar todos los usuarios" }, "findOne": { summary: "Buscar un usuario por id" }, "update": { summary: "Actualizar un usuario por id" } } }], [import("./modules/screen/screen.controller"), { "ScreenController": { "create": { summary: "Crea una pantalla" }, "findAll": { summary: "Listar todas las pantallas" }, "findOne": { summary: "Buscar una pantalla por id" }, "update": { summary: "Actualiza una pantalla por id" } } }], [import("./modules/permission/permission.controller"), { "PermissionController": { "create": { summary: "Crea un permiso" }, "findAllByClient": { summary: "Listar todos los permisos de un cliente" }, "findAllByUser": { summary: "Listar todos los permisos de un usuario" }, "findOne": { summary: "Obtiene un permiso por vista y usuario" }, "update": { summary: "Actualiza un permiso por vista y usuario" } } }], [import("./modules/work_invitation/work_invitation.controller"), { "WorkInvitationController": { "create": { summary: "Crea una invitaci\u00F3nn" }, "findInvitationByClient": { summary: "Obtiene todas las invitaciones de un cliente" }, "findInvitationByProfessional": { summary: "Obtiene todas las invitaciones de un profesional" }, "acceptInvitation": { summary: "Acepta una invitaci\u00F3n" } } }], [import("./modules/client_has_professional/client_has_professional.controller"), { "ClientHasProfessionalController": { "findAllByClient": { summary: "Listar todas las relaciones de un cliente" }, "findAllByProfessional": { summary: "Listar todas las relaciones de un profesional" }, "findOne": { summary: "Obtiene un registro por cliente y profesional" }, "update": { summary: "Actualiza el estado de un registro por cliente y profesional" } } }], [import("./modules/company/company.controller"), { "CompanyController": { "create": { summary: "Crea una empresa" }, "findAll": { summary: "Listar todas las empresas" }, "findOne": { summary: "Buscar una empresa por id" }, "update": { summary: "Actualizar una empresa por id" } } }], [import("./modules/patient/patient.controller"), { "PatientController": { "create": { summary: "Crea un paciente" }, "findAll": { summary: "Listar todos los pacientes" }, "findOne": { summary: "Buscar un paciente por id" }, "update": { summary: "Actualizar un paciente por id" } } }], [import("./modules/treatment/treatment.controller"), { "TreatmentController": { "create": { summary: "Crea una prestacion" }, "findAll": { summary: "Listar todos las prestaciones" }, "findOne": { summary: "Buscar un prestaci\u00F3n por id" }, "update": { summary: "Actualizar una prestaci\u00F3n por id" } } }], [import("./modules/company_has_treatment/company_has_treatment.controller"), { "CompanyHasTreatmentController": { "create": { summary: "Crea una nueva relacion entre empresa y prestacion" }, "findAllByClient": { summary: "Listar todas las relaciones de un cliente" }, "findAllByCompany": { summary: "Obtiene las relaciones de una empresa y cliente" }, "findOne": { summary: "Obtiene un registro por empresa y prestacion" }, "update": { summary: "Actualiza el estado de un registro por empresa y prestacion" } } }], [import("./modules/treatment_has_professional/treatment_has_professional.controller"), { "TreatmentHasProfessionalController": { "create": { summary: "Crea una nueva relacion entre prestacion y profesional" }, "findAllByClient": { summary: "Listar todas las relaciones de un cliente" }, "findAllByTreatment": { summary: "Listar todos los profesionales de una prestacion" }, "findAllByProfessional": { summary: "Listar todos los prestaciones de un profesional" }, "findOne": { summary: "Obtiene un registro por empresa, prestacion y profesional" }, "update": { summary: "Actualiza el estado de un registro por empresa, prestacion y profesional" } } }], [import("./modules/order/order.controller"), { "OrderController": { "create": { summary: "Crea un pedido" }, "findAll": { summary: "Listar todos los pedidos" }, "findOne": { summary: "Buscar un pedido por id" }, "update": { summary: "Actualizar un pedido por id" }, "findByProfessional": { summary: "Buscar pedidos por profesional", type: [Object] } } }], [import("./modules/claim/claim.controller"), { "ClaimController": { "create": { summary: "Crea un reclamo" }, "findAll": { summary: "Listar todos los reclamos" }, "findOne": { summary: "Buscar un reclamo por id" }, "update": { summary: "Actualizar un reclamo por id" } } }]] } };
};